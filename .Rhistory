demo()
install.package("devtools")
install.package("devtools")
install.packages("devtools")
devtools::install_version("shiny", "0.11.0")
devtools::install_version("R2", "2.0")
getOption("rep")
getOption("rep")
getOption("repos")
install.packages("shiny")
install.packages("shiny")
package * version date
getOption("repos")
install.packages("shiny")
shiny::runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
install.packages("Lubridate")
install.packages("lubridate")
library("lubridate")
read.csv("C:\Users\yehia salah\Documents\shimatta(final)\shimatta\UCBAdmissions.csv",TRUE)
library("lubridate")
ds <-read.csv("C:/Users/yehia salah/Documents/shimatta(final)/shimatta/UCBAdmissions.csv",TRUE)
(ds[["birthdate"]])
dates <- dmy(ds[["birthdate"]])
(dates)
dates <- ymd(ds[["birthdate"]])
(dates)
View(ds)
View(ds)
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
(input$dynamic2)
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
runApp('shimatta(final)/shimatta')
dn <-as.character(input$dynamic))
dn <-as.character(input$dynamic)
runApp('shimatta(final)/shimatta')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library("lubridate")
ds <-read.csv("C:/Users/yehia salah/Documents/shimatta(final)/shimatta/UCBAdmissions.csv",TRUE)
(ds[["birthdate"]])
dates <- ymd(ds[["birthdate"]])
(dates)
ymd(ds[[as.character(input$dynamic2)]])
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
ui <- fluidPage(
fluidRow(
plotOutput("plot1", height = 300, width = 300,
click = "plot1_click"
)
),
verbatimTextOutput("x_value"),
verbatimTextOutput("selected_rows")
)
server <- function(input, output) {
output$plot1 <- renderPlot({
plot(ToothGrowth$supp, ToothGrowth$len)
})
# Print the name of the x value
output$x_value <- renderPrint({
if (is.null(input$plot1_click$x)) return()
lvls <- levels(ToothGrowth$supp)
lvls[round(input$plot1_click$x)]
})
# Print the rows of the data frame which match the x value
output$selected_rows <- renderPrint({
if (is.null(input$plot1_click$x)) return()
keeprows <- round(input$plot1_click$x) == as.numeric(ToothGrowth$supp)
ToothGrowth[keeprows, ]
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
View(ds)
View(ds)
View(ds)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
library(shiny)
library(shinydashboard)
header <- dashboardHeader(title = "visual R studio")
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
load("~/shimatta(final)/VisualRStudio+/.RData")
